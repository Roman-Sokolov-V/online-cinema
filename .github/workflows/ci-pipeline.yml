name: CI Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-unit-and-integration:
    runs-on: ubuntu-latest
    env:
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run flake8
        run: |
          poetry run flake8 src

      - name: Run unit tests
        run: poetry run pytest src/tests/test_unit/

      - name: Run integration tests
        run: poetry run pytest src/tests/test_integration/

  test-e2e:
    runs-on: ubuntu-latest
    env:
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create empty env
        run: |
          touch .env

      - name: Start Docker Compose and run E2E tests
        run: |
          docker compose -f docker-compose-tests.yml up --build --abort-on-container-exit --exit-code-from web --no-recreate --force-recreate


      - name: Cleanup Docker Compose
        if: always()
        run: |
          docker compose -f docker-compose-tests.yml down
